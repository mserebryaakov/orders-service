basePath: /
definitions:
  order.Order:
    properties:
      customer_id:
        type: string
      id:
        type: string
      order_status:
        type: string
    type: object
  v1.IdResponse:
    properties:
      id:
        type: string
    type: object
  v1.UploadResponse:
    properties:
      message:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for orders usecase
  title: Order service
  version: "1.0"
paths:
  /v1/order:
    delete:
      description: Delete order by ID
      parameters:
      - description: Order ID
        in: query
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "404":
          description: Order not found
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/v1.UploadResponse'
      summary: Delete order
      tags:
      - order
    get:
      description: Get order by ID
      parameters:
      - description: Order ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success get order
          schema:
            $ref: '#/definitions/order.Order'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "404":
          description: Order not found
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/v1.UploadResponse'
      summary: Get order
      tags:
      - order
    post:
      consumes:
      - application/json
      description: Create order
      parameters:
      - description: Order object
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.Order'
      produces:
      - application/json
      responses:
        "200":
          description: Success create
          schema:
            $ref: '#/definitions/v1.IdResponse'
        "400":
          description: Invalid body
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/v1.UploadResponse'
      summary: Create order
      tags:
      - order
    put:
      consumes:
      - application/json
      description: Update order
      parameters:
      - description: Order object
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid body
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "404":
          description: Order not found
          schema:
            $ref: '#/definitions/v1.UploadResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/v1.UploadResponse'
      summary: Update order
      tags:
      - order
swagger: "2.0"
